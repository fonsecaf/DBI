USE [KRI_PROD]
GO
/****** Object:  StoredProcedure [dbo].[sp_Create_KRI_Records_Phase2]    Script Date: 05/18/2018 14:35:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[sp_Create_KRI_Records_Phase2]
@CreateNew INT 
,@KRI INT
,@SUCCESS INT OUTPUT
AS
BEGIN
/*****************************************************************************/
/* Author : Soo Rugdee  26/7/2017                                            */
/* Create KRI records Phase 2                                                */
/* Description : 34 - V_ACL_WEEK_STORE_REJ_TRANSFERS                         */
/*               37 - V_ACL_WEEK_STORE_GROSS_PROFIT                          */
/*               32 - V_ACL_WEEK_STORE_ADMIN_REFUND                          */
/*               35 - TGGVW_ACL_AGED_DEBTORS                                 */
/*               33 - V_ACL_WEEK_STORE_CNCL_WEBSALES                         */
/*               36 - V_ACL_WEEK_STORE_COD_RATIO (COD Ratio Over Sales)      */
/*****************************************************************************/


-- Testing SET @KRI = 36


DECLARE  @TABLE VARCHAR(100),@SELECT_STMT NVARCHAR(4000), @v_Measures  NVARCHAR(4000)
DECLARE @FROM_STMT NVARCHAR(4000),@WHERE_STMT NVARCHAR(4000),@ORDER_STMT NVARCHAR(4000),@GROUP_STMT NVARCHAR(4000)
DECLARE @SOURCE_SYSTEM VARCHAR(50)
DECLARE @SQL NVARCHAR(4000), @SQL2 NVARCHAR(4000),@CUR_WEEK_ENDDATE DATETIME
DECLARE @GEN_RECS INT = 0,  @CUR_DATE DATETIME
DECLARE @YYYYWW VARCHAR(10)
      ,@WEEK INT
      ,@WEEK_STARTDATE DATETIME
      ,@WEEK_ENDDATE DATETIME
      ,@MONTH INT
      ,@MONTH_DESC VARCHAR(100)
      ,@YEAR INT
      ,@DAYDIFF INT
      ,@COUNT INT
      ,@ROW INT
      ,@MEASURE VARCHAR(500)
      ,@STORE_COUNT INT
      ,@GROUP_ID INT, @GROUP_SPLIT_ID INT
      
      
      /* Initialisation */   
SET @GEN_RECS = 0
SELECT @STORE_COUNT = COUNT(*)
  FROM [KRI_PROD].[dbo].[DIM_STORE_MATRIX]


/* Transfer all parameter values for stored procdure to run depending on @KRI parameter passed in */
SELECT 
@TABLE = KRI_TABLE
,@MEASURE = MEASURE
,@SOURCE_SYSTEM = SOURCE_SYSTEM
,@SELECT_STMT = SELECT_STMT
,@FROM_STMT = FROM_STMT
,@WHERE_STMT = WHERE_STMT
,@ORDER_STMT = ORDER_STMT
,@GROUP_STMT = GROUP_STMT
FROM KRI_PROD.DBO.KRI_PARAMETER_CONTROL
WHERE KRI = @KRI


SELECT @GROUP_ID=GROUP_ID
,@GROUP_SPLIT_ID=GROUP_SPLIT_ID 
FROM [KRI_PROD].[DBO].[KRI_PARAMETER_CONTROL] WHERE MEASURE=@MEASURE
/* Determine if the TGG_KRI Tables exist */
/* If the table exists then just append else create as new */


  IF OBJECT_ID ( @TABLE , N'U') IS NOT NULL AND @KRI <> 34 AND @KRI <> 35
   BEGIN
      /* check if there is data for current measure */
      SET @SQL = 'SELECT @COUNT = COUNT(*)  ' + CHAR(10)
      SET @SQL = @SQL +  'FROM (SELECT MAX(YYYYWW) YYYYWW FROM ' + @TABLE + CHAR(10)
      SET @SQL = @SQL + 'WHERE MEASURE = ' + '''' + @MEASURE + '''' + CHAR(10)
      SET @SQL = @SQL + ' ) A ' + CHAR(10)
      SET @SQL = @SQL + ' INNER JOIN KRI_PROD.DBO.KRI_FISCAL_CALENDAR B ' + CHAR(10)
      SET @SQL = @SQL + ' ON A.YYYYWW =  B.YYYYWW '      
      EXEC sp_executesql @SQL,N'@COUNT INT output', @COUNT OUTPUT     
      
   
      
      /* if there is data for current measure*/
      IF  @COUNT > 0
      BEGIN 
         SET @SQL = 'SELECT @CUR_WEEK_ENDDATE = B.WEEK_ENDDATE  ' + CHAR(10)
         SET @SQL = @SQL +  'FROM (SELECT MAX(YYYYWW) YYYYWW FROM ' + @TABLE + CHAR(10)
         SET @SQL = @SQL + 'WHERE MEASURE = ' + '''' + @MEASURE + '''' + CHAR(10)
         SET @SQL = @SQL + ' ) A ' + CHAR(10)
         SET @SQL = @SQL + ' INNER JOIN KRI_PROD.DBO.KRI_FISCAL_CALENDAR B ' + CHAR(10)
         SET @SQL = @SQL + ' ON A.YYYYWW =  B.YYYYWW '      
         EXEC sp_executesql @SQL,N'@CUR_WEEK_ENDDATE datetime output', @CUR_WEEK_ENDDATE OUTPUT
      
         SELECT @CUR_DATE = GETDATE()

         IF @CUR_WEEK_ENDDATE < @CUR_DATE  SET @GEN_RECS = 1
      
         SET @CreateNew = 0   
      END
      IF  @COUNT <= 0
      BEGIN
      SET @SQL = 'SELECT @CUR_WEEK_ENDDATE = B.WEEK_ENDDATE  ' + CHAR(10)
      SET @SQL = @SQL +  'FROM   ' + CHAR(10)
      SET @SQL = @SQL +  '(SELECT YYYYWW-1 YYYYWW FROM KRI_PROD.DBO.KRI_FISCAL_CALENDAR    ' + CHAR(10)
      SET @SQL = @SQL +  'WHERE GETDATE() BETWEEN WEEK_STARTDATE AND WEEK_ENDDATE) A    ' + CHAR(10)
      SET @SQL = @SQL +  'INNER JOIN KRI_PROD.DBO.KRI_FISCAL_CALENDAR B    ' + CHAR(10)
      SET @SQL = @SQL +  'ON A.YYYYWW=B.YYYYWW   ' + CHAR(10)
      EXEC sp_executesql @SQL,N'@CUR_WEEK_ENDDATE datetime output', @CUR_WEEK_ENDDATE OUTPUT
      SELECT @CUR_DATE = GETDATE()
      
      IF @CUR_WEEK_ENDDATE < @CUR_DATE  SET @GEN_RECS = 1
      SET @CreateNew = 1
      END
 END  
 
 IF OBJECT_ID ( @TABLE , N'U') IS NOT NULL AND (@KRI = 34 OR @KRI = 35 )
   BEGIN
      DECLARE @Test VARCHAR(10)
      IF @KRI = 34 SET  @Test = 'Rjct%'
      IF @KRI = 35 SET  @Test = 'Age%'
      /* check if there is data for current measure */
      SET @SQL = 'SELECT @COUNT = COUNT(*)  ' + CHAR(10)
      SET @SQL = @SQL +  'FROM (SELECT MAX(YYYYWW) YYYYWW FROM ' + @TABLE + CHAR(10)
      SET @SQL = @SQL + 'WHERE MEASURE LIKE  ' + '''' +  @Test + '''' + CHAR(10)
      SET @SQL = @SQL + ' ) A ' + CHAR(10)
      SET @SQL = @SQL + ' INNER JOIN KRI_PROD.DBO.KRI_FISCAL_CALENDAR B ' + CHAR(10)
      SET @SQL = @SQL + ' ON A.YYYYWW =  B.YYYYWW '      
      EXEC sp_executesql @SQL,N'@COUNT INT output', @COUNT OUTPUT     
      
   
      
      /* if there is data for current measure*/
      IF  @COUNT > 0
      BEGIN 
         SET @SQL = 'SELECT @CUR_WEEK_ENDDATE = B.WEEK_ENDDATE  ' + CHAR(10)
         SET @SQL = @SQL +  'FROM (SELECT MAX(YYYYWW) YYYYWW FROM ' + @TABLE + CHAR(10)
         SET @SQL = @SQL + 'WHERE MEASURE LIKE ' + '''' + @Test + '''' + CHAR(10)
         SET @SQL = @SQL + ' ) A ' + CHAR(10)
         SET @SQL = @SQL + ' INNER JOIN KRI_PROD.DBO.KRI_FISCAL_CALENDAR B ' + CHAR(10)
         SET @SQL = @SQL + ' ON A.YYYYWW =  B.YYYYWW '      
         EXEC sp_executesql @SQL,N'@CUR_WEEK_ENDDATE datetime output', @CUR_WEEK_ENDDATE OUTPUT
      
         SELECT @CUR_DATE = GETDATE()

         IF @CUR_WEEK_ENDDATE < @CUR_DATE  SET @GEN_RECS = 1
      
         SET @CreateNew = 0   
      END
      IF  @COUNT <= 0
      BEGIN
      SET @SQL = 'SELECT @CUR_WEEK_ENDDATE = B.WEEK_ENDDATE  ' + CHAR(10)
      SET @SQL = @SQL +  'FROM   ' + CHAR(10)
      SET @SQL = @SQL +  '(SELECT YYYYWW-1 YYYYWW FROM KRI_PROD.DBO.KRI_FISCAL_CALENDAR    ' + CHAR(10)
      SET @SQL = @SQL +  'WHERE GETDATE() BETWEEN WEEK_STARTDATE AND WEEK_ENDDATE) A    ' + CHAR(10)
      SET @SQL = @SQL +  'INNER JOIN KRI_PROD.DBO.KRI_FISCAL_CALENDAR B    ' + CHAR(10)
      SET @SQL = @SQL +  'ON A.YYYYWW=B.YYYYWW   ' + CHAR(10)
      EXEC sp_executesql @SQL,N'@CUR_WEEK_ENDDATE datetime output', @CUR_WEEK_ENDDATE OUTPUT
      SELECT @CUR_DATE = GETDATE()
      
      IF @CUR_WEEK_ENDDATE < @CUR_DATE  SET @GEN_RECS = 1
      SET @CreateNew = 1
      END
 END  
 
 
/*
PRINT 'Create New ' + CAST(@CreateNew AS VARCHAR(1))
PRINT 'Gen Recs ' + CAST(@GEN_RECS  AS VARCHAR(1))
PRINT @SQL
print @CUR_WEEK_ENDDATE
PRINT @TABLE 
PRINT @MEASURE 
PRINT @SOURCE_SYSTEM 
PRINT @SELECT_STMT 
PRINT @FROM_STMT 
PRINT @WHERE_STMT 
PRINT @ORDER_STMT 
PRINT @GROUP_STMT 
*/


 SET NOCOUNT ON;  

 /***** Initialisation   ***/
 
  SET @SQL = ''
  
 
 -- KRI 32 & 33 & 36
   IF OBJECT_ID('tempdb..#tmp3') IS NOT NULL 
    DROP TABLE #tmp3
   CREATE TABLE #tmp3
  (
    CurrYYYYWW VARCHAR(6)
   ,YYYYWW VARCHAR(10) 
   ,STOREID varchar(3)
   ,AMOUNT FLOAT 
  )   
  
 -- KRI 34 & 35
 IF OBJECT_ID('tempdb..#tmp4') IS NOT NULL 
    DROP TABLE #tmp4
   CREATE TABLE #tmp4
  (
    CurrYYYYWW VARCHAR(6)
   ,YYYYWW VARCHAR(10) 
   ,STOREID varchar(3)
   ,AGEING VARCHAR(100)
   ,AMOUNT FLOAT 
  )   
   
  
  IF @GEN_RECS = 1 AND @CreateNew = 1 
 BEGIN  -- 1
   
   SELECT @COUNT = COUNT(*)
   FROM [KRI_PROD].[dbo].[KRI_FISCAL_CALENDAR] C
   WHERE (C.YEAR BETWEEN YEAR(GETDATE()) AND YEAR(GETDATE())+1) AND C.WEEK >= 1
   AND C.WEEK_ENDDATE = @CUR_WEEK_ENDDATE
   

     
   IF OBJECT_ID (N'[KRI_PROD].[dbo].[TMP_TABLE]', N'U') IS NOT NULL 
      DROP TABLE [KRI_PROD].[dbo].[TMP_TABLE]
      
   CREATE TABLE [KRI_PROD].[dbo].[TMP_TABLE]
     (
     YYYYWW VARCHAR(6)           
     ,STOREID VARCHAR(4)
     ,MEASURE VARCHAR(100)
     ,VALUE FLOAT)
   
   

   DECLARE KRI_FISCAL_CAL_CURS CURSOR FOR
      SELECT [YYYYWW]
      ,[WEEK]
      ,[WEEK_STARTDATE]
      ,[WEEK_ENDDATE]
      ,[MONTH]
      ,[MONTH_DESC]
      ,[YEAR]
      ,DATEDIFF(d,@CUR_WEEK_ENDDATE,GETDATE()) [DAYDIFF]
		FROM [KRI_PROD].[dbo].[KRI_FISCAL_CALENDAR] C
		WHERE (C.YEAR BETWEEN YEAR(GETDATE()) AND YEAR(GETDATE())+1) AND C.WEEK >= 1
		AND  C.WEEK_ENDDATE = @CUR_WEEK_ENDDATE
      
      OPEN KRI_FISCAL_CAL_CURS

      
      FETCH NEXT FROM KRI_FISCAL_CAL_CURS INTO @YYYYWW ,@WEEK ,@WEEK_STARTDATE ,
      @WEEK_ENDDATE ,@MONTH ,@MONTH_DESC ,@YEAR ,@DAYDIFF 
       IF @DAYDIFF < 0 SET @DAYDIFF = @DAYDIFF * (-1)
       SET @ROW = @ROW + 1     
         
       IF @KRI <> 37 OR  @KRI <> 36 
			BEGIN
             SET @SQL2 = 'SELECT '  + @YYYYWW + ' AS CurrYYYYWW' + ',' + @SELECT_STMT + ' ' + CHAR(10)
            
             SET @SQL2 = @SQL2 + @FROM_STMT + ' ' + CHAR(10)
                       
             
             SET @SQL2 = @SQL2 + @WHERE_STMT + ' '  + CHAR(10)
             
             
             SET @SQL2 = @SQL2 + ISNULL(@GROUP_STMT ,' ')+ CHAR(10)             
             
                          
			 SET @SQL2 = @SQL2 + @ORDER_STMT  
			END 
			 
        IF @KRI = 37  OR @KRI = 36
					BEGIN
					SET @SQL =  'SELECT * FROM OPENQUERY(' + @SOURCE_SYSTEM + ','+ ''''
					SET @SQL2 = 'SELECT '  + @YYYYWW + ' AS CurrYYYYWW' + ',' +  @SELECT_STMT + ' ' + CHAR(10)
					SET @SQL2 = @SQL2 + @FROM_STMT + ' ' + CHAR(10)
					SET @SQL2 = @SQL2 + @WHERE_STMT + ' ' + @YYYYWW + ' ' + CHAR(10)
					SET @SQL2 = @SQL2 + @ORDER_STMT + ''''+')'
					END
        
        IF @KRI=32 OR @KRI = 33 OR @KRI = 36 OR @KRI = 37
        BEGIN  -- 2
        --PRINT @SQL2
		--	PRINT (@SQL + @SQL2)  
            INSERT INTO #tmp3
		    EXECUTE(@SQL + @SQL2)  
	           
		   INSERT INTO [KRI_PROD].[dbo].[TMP_TABLE]  
		   SELECT YYYYWW  ,STOREID  ,@MEASURE,AMOUNT  FROM  #tmp3 WHERE CurrYYYYWW =  YYYYWW  
           
        END  -- 2     
        IF @KRI=34 OR @KRI=35
        BEGIN  --2
			--PRINT @SQL2
			--PRINT (@SQL + @SQL2)  
           INSERT INTO #tmp4
		   EXECUTE(@SQL + @SQL2)          
        END   --2
        
        IF @KRI=34 
			begin   --2
			INSERT INTO [KRI_PROD].[dbo].[TMP_TABLE]  		   
			SELECT YYYYWW 
			,STOREID 		   
			,CASE 
			WHEN CHARINDEX('1',AGEING)>0 THEN 'RJCT_Less_7_Days'
			WHEN CHARINDEX('2',AGEING)>0 THEN 'RJCT_14_30_Days'
			WHEN CHARINDEX('3',AGEING)>0 THEN 'RJCT_30_60_Days'
			WHEN CHARINDEX('4',AGEING)>0 THEN 'RJCT_Gr_60_Days'
			END 
			,AMOUNT
			FROM  #tmp4 WHERE CurrYYYYWW =  YYYYWW  
			end  --2
			
		IF @KRI=35
			begin  -- 3
            INSERT INTO [KRI_PROD].[dbo].[TMP_TABLE]  		   
			SELECT CurrYYYYWW 
			,STOREID 
            ,CASE
            WHEN AGEING ='AP_0' THEN 'AGE_0_Days'
			WHEN AGEING='AP_08' THEN 'AGE_0_7_Days'
			WHEN AGEING='AP_30' THEN 'AGE_7_30_Days'
			WHEN AGEING='AP_60' THEN 'AGE_30_60_Days'
			WHEN AGEING='AP_90'  THEN 'AGE_60_90_Days'
			ELSE 'AGE_Gr_90_Days'
			END                 
			,AMOUNT
			FROM  #tmp4 WHERE CurrYYYYWW + 1  =  YYYYWW   
			end    	--3		
	
		   
	   
	        
      
       WHILE @@FETCH_STATUS = 0 AND @ROW < @COUNT 
        BEGIN     -- 2    
          IF @@ERROR =  0 SET @SUCCESS = 1
            ELSE SET @SUCCESS = 0
            SET @ROW = @ROW + 1
            FETCH NEXT FROM KRI_FISCAL_CAL_CURS INTO @YYYYWW ,@WEEK ,@WEEK_STARTDATE ,@WEEK_ENDDATE 
                            ,@MONTH ,@MONTH_DESC ,@YEAR ,@DAYDIFF
           IF @DAYDIFF < 0 SET @DAYDIFF = @DAYDIFF * (-1)
           
			
            IF @KRI <> 37 OR  @KRI <> 36 
			BEGIN
				 SET @SQL2 = 'SELECT '  + @YYYYWW + ' AS CurrYYYYWW' + ',' + @SELECT_STMT + ' ' + CHAR(10)
            
				SET @SQL2 = @SQL2 + @FROM_STMT + ' ' + CHAR(10)
                       
             
				SET @SQL2 = @SQL2 + @WHERE_STMT + ' '  + CHAR(10)
             
             
				SET @SQL2 = @SQL2 + ISNULL(@GROUP_STMT ,' ')+ CHAR(10)             
             
                          
				SET @SQL2 = @SQL2 + @ORDER_STMT    
			END        
           
		   IF @KRI = 37 OR  @KRI = 36
					BEGIN
					SET @SQL =  'SELECT * FROM OPENQUERY(' + @SOURCE_SYSTEM + ','+ ''''
					SET @SQL2 = 'SELECT '  + @YYYYWW + ' AS CurrYYYYWW' + ',' +  @SELECT_STMT + ' ' + CHAR(10)
					SET @SQL2 = @SQL2 + @FROM_STMT + ' ' + CHAR(10)
					SET @SQL2 = @SQL2 + @WHERE_STMT + ' ' + @YYYYWW + ' ' + CHAR(10)
					SET @SQL2 = @SQL2 + @ORDER_STMT + ''''+')'
					END
					
					  
		   IF @KRI=32 OR @KRI = 33 OR @KRI = 36 OR @KRI = 37
				BEGIN  --3
					--PRINT (@SQL + @SQL2) 
					INSERT INTO #tmp3			 
					EXECUTE(@SQL + @SQL2)  
	           
					INSERT INTO [KRI_PROD].[dbo].[TMP_TABLE]  
					SELECT YYYYWW  ,STOREID ,@MEASURE ,AMOUNT  FROM  #tmp3 WHERE CurrYYYYWW =  YYYYWW  
				          
				END   --3 	 
	      IF @KRI=34 OR @KRI=35
				BEGIN	-- 3
				--PRINT (@SQL + @SQL2)  
				INSERT INTO #tmp4
				EXECUTE(@SQL + @SQL2) 				
				END  --3
				
		  IF @KRI=34
					begin --3
					INSERT INTO [KRI_PROD].[dbo].[TMP_TABLE]  		   
					SELECT YYYYWW 
					,STOREID 		   
					,CASE 
					WHEN CHARINDEX('1',AGEING)>0 THEN 'RJCT_Less_7_Days'
					WHEN CHARINDEX('2',AGEING)>0 THEN 'RJCT_14_30_Days'
					WHEN CHARINDEX('3',AGEING)>0 THEN 'RJCT_30_60_Days'
					WHEN CHARINDEX('4',AGEING)>0 THEN 'RJCT_Gr_60_Days'
					END 
					,AMOUNT
					FROM  #tmp4 WHERE CurrYYYYWW =  YYYYWW   
					end --3
					
          IF @KRI=35
                    begin --3
						INSERT INTO [KRI_PROD].[dbo].[TMP_TABLE]  		   
						SELECT CurrYYYYWW 
						,STOREID 
						,CASE
						WHEN AGEING ='AP_0' THEN 'AGE_0_Days'
						WHEN AGEING='AP_08' THEN 'AGE_0_7_Days'
						WHEN AGEING='AP_30' THEN 'AGE_7_30_Days'
						WHEN AGEING='AP_60' THEN 'AGE_30_60_Days'
						WHEN AGEING='AP_90'  THEN 'AGE_60_90_Days'
						ELSE 'AGE_Gr_90_Days'
						END                  
						,AMOUNT
						FROM  #tmp4 WHERE CurrYYYYWW + 1 =  YYYYWW 
				     end --3
      end --2
      CLOSE KRI_FISCAL_CAL_CURS ;
	  DEALLOCATE KRI_FISCAL_CAL_CURS ;
	  
	  --   select * from #tmp3
	  --   select * from #tmp4
	  --   SELECT * FROM [KRI_PROD].[dbo].[TMP_TABLE]
	  
	    	  
	  	/* Append into FACT_ALL_KRI_RECORDS  */
		IF @KRI <> 34 AND @KRI <> 35 -- Not COD and IS
	      
	        BEGIN  -- 3
	          /* Before adding to KRI Matrix Table delete matching records from TMP_TABLE */	      
              SET @SQL = 'DELETE  FROM  KRI_PROD.DBO.FACT_ALL_KRI_RECORDS WHERE ' + CHAR(10)
              SET @SQL = @SQL + ' MEASURE =  ' + '''' + @MEASURE + '''' + CHAR(10)
              SET @SQL = @SQL + ' AND YYYYWW IN (SELECT DISTINCT(YYYYWW) FROM   KRI_PROD.DBO.TMP_TABLE T   )' + CHAR(10)
              
               --PRINT @SQL
               EXECUTE(@SQL)
            
            
            
		      -- NOW INSERT RECORD INTO @TABLE 	   
			  SET @SQL = 'INSERT INTO '+ @TABLE + CHAR(10)
		      SET @SQL = @SQL + 'SELECT C.YYYYWW ' +CHAR(10)
			  SET @SQL = @SQL + ' ,A.STOREID ' + CHAR(10)
			  SET @SQL = @SQL + ' , ' + ''''+ @MEASURE + ''''+ CHAR(10)
			  SET @SQL = @SQL + ' ,A.VALUE ' + CHAR(10)			
			  SET @SQL = @SQL + ' FROM [KRI_PROD].[dbo].[TMP_TABLE] A ' + CHAR(10)
			  SET @SQL = @SQL + '  LEFT OUTER JOIN [KRI_PROD].[dbo].[KRI_FISCAL_CALENDAR] C ' + CHAR(10)
			  SET @SQL = @SQL + '  ON C.YYYYWW = A.YYYYWW '
			  
			   --PRINT @SQL
			   EXECUTE(@SQL)
	             IF @@ERROR <> 0 SET @SUCCESS=99 ELSE  SET @SUCCESS=1 
	        END  --3
	          
	  IF @KRI = 34 -- AGEING_OF_REJECTED_TRANSFERS
	         BEGIN  --3
	            
	            SET @v_Measures = '(' + '''' +'RJCT_Less_7_Days' + '''' + ',' + CHAR(10)
	            SET @v_Measures = @v_Measures  + '''' +'RJCT_14_30_Days' +''''+ ',' + CHAR(10)
	            SET @v_Measures = @v_Measures + '''' +'RJCT_30_60_Days' +''''+ ',' + CHAR(10)	            
	            SET @v_Measures = @v_Measures  + '''' + 'RJCT_Gr_60_Days' +''''+ ')'
	         
	            /* Before adding to KRI Matrix Table delete matching records from #tmp1 */	      
                 SET @SQL = 'DELETE  FROM  KRI_PROD.DBO.FACT_ALL_KRI_RECORDS WHERE ' + CHAR(10)
                 SET @SQL = @SQL + ' MEASURE IN  ' + @v_Measures + CHAR(10)
                 SET @SQL = @SQL + ' AND YYYYWW IN (SELECT DISTINCT(YYYYWW) FROM   [KRI_PROD].[dbo].[TMP_TABLE] T   )' + CHAR(10)
                 
                 --PRINT @SQL
                 EXECUTE(@SQL)
                 
	         /**** BUILD OF KRI MATRIX COMPLETE ***/       
	       
	          SET @SQL = 'INSERT INTO '+ @TABLE + CHAR(10)
	          SET @SQL = @SQL + 'SELECT C.YYYYWW ' +CHAR(10)
	          SET @SQL = @SQL + ',A.STOREID ' +CHAR(10)	          
	          SET @SQL = @SQL + ',A.MEASURE	'     + CHAR(10)    
	          SET @SQL = @SQL + ',A.VALUE	'     + CHAR(10)    
	          SET @SQL = @SQL + 'FROM [KRI_PROD].[dbo].[TMP_TABLE] A	 '     + CHAR(10)   
	          SET @SQL = @SQL + 'INNER JOIN [KRI_PROD].[dbo].[KRI_FISCAL_CALENDAR] C 	 '     + CHAR(10)
	        --  SET @SQL = @SQL + 'ON C.YYYYWW = A.YYYYWW  AND A.SALES_AMT <> 0 '     + CHAR(10)
	          SET @SQL = @SQL + 'ON C.YYYYWW = A.YYYYWW  '     + CHAR(10)
	       
	       
	       
	          --PRINT @SQL    
	          EXECUTE(@SQL)       
	         
	       
	       END  --3
	     
	     IF @KRI = 35 -- AGED_DEBTORS
	         BEGIN  --3
	            
	            SET @v_Measures = '(' + '''' +'AGE_0_Days' + '''' + ',' + CHAR(10)
	            SET @v_Measures = @v_Measures  + '''' +'AGE_0_7_Days' +''''+ ',' + CHAR(10)
	            SET @v_Measures = @v_Measures + '''' +'AGE_7_30_Days' +''''+ ',' + CHAR(10)
	            SET @v_Measures = @v_Measures + '''' +'AGE_30_60_Days' +''''+ ',' + CHAR(10)
	            SET @v_Measures = @v_Measures  + '''' +'AGE_60_90_Days' +''''+ ')'
	         
	            /* Before adding to KRI Matrix Table delete matching records from #tmp2 */	      
                 SET @SQL = 'DELETE  FROM  KRI_PROD.DBO.FACT_ALL_KRI_RECORDS WHERE ' + CHAR(10)
                 SET @SQL = @SQL + ' MEASURE IN  ' + @v_Measures + CHAR(10)
                 SET @SQL = @SQL + ' AND YYYYWW IN (SELECT DISTINCT(YYYYWW) FROM   [KRI_PROD].[dbo].[TMP_TABLE] T   )' + CHAR(10)
                 
                 --PRINT @SQL
                 EXECUTE(@SQL)
                 
	         /**** BUILD OF KRI MATRIX COMPLETE ***/      
	       
	          SET @SQL = 'INSERT INTO '+ @TABLE + CHAR(10)
	          SET @SQL = @SQL + 'SELECT C.YYYYWW ' +CHAR(10)
	          SET @SQL = @SQL + ',A.STOREID ' +CHAR(10)	          
	          SET @SQL = @SQL + ',A.MEASURE	'     + CHAR(10)    
	          SET @SQL = @SQL + ',A.VALUE	'     + CHAR(10)    
	          SET @SQL = @SQL + 'FROM [KRI_PROD].[dbo].[TMP_TABLE] A	 '     + CHAR(10)   
	          SET @SQL = @SQL + 'INNER JOIN [KRI_PROD].[dbo].[KRI_FISCAL_CALENDAR] C 	 '     + CHAR(10)
	        --  SET @SQL = @SQL + 'ON C.YYYYWW = A.YYYYWW  AND A.SALES_AMT <> 0 '     + CHAR(10)
	          SET @SQL = @SQL + 'ON C.YYYYWW = A.YYYYWW  '     + CHAR(10)
	       
	       
	       
	          --PRINT @SQL    
	          EXECUTE(@SQL)
	      
	       
	          
	       END  --3 
	  
	  END --1
	 
	     
   IF @GEN_RECS = 1 AND @CreateNew = 0 
		
		BEGIN  --1
        
  
        SELECT @COUNT = COUNT(*)
		FROM [KRI_PROD].[dbo].[KRI_FISCAL_CALENDAR] C
		WHERE   WEEK_ENDDATE > @CUR_WEEK_ENDDATE AND WEEK_ENDDATE <= @CUR_WEEK_ENDDATE  + 7
		AND DATEDIFF(DAY,WEEK_ENDDATE,@CUR_DATE) BETWEEN 1 ANd 7
		--WHERE DATEDIFF(DAY,WEEK_ENDDATE,@CUR_DATE) BETWEEN 1 ANd 7
		AND (C.YEAR BETWEEN YEAR(GETDATE()) AND YEAR(GETDATE())+1) AND C.WEEK >= 1  
        
         
        SET @ROW = 0
        
        IF OBJECT_ID (N'[KRI_PROD].[dbo].[TMP_TABLE]', N'U') IS NOT NULL 
         DROP TABLE [KRI_PROD].[dbo].[TMP_TABLE]     
        
		  CREATE TABLE [KRI_PROD].[dbo].[TMP_TABLE]
		 (
		 YYYYWW VARCHAR(6)           
		 ,STOREID VARCHAR(4)
		 ,MEASURE VARCHAR(100)
		 ,VALUE FLOAT)
		 
		  IF @COUNT >= 1
             BEGIN --2              
               
               
             DECLARE KRI_FISCAL_CAL_CURS CURSOR FOR
       
			 SELECT [YYYYWW]
					,[WEEK]
					,[WEEK_STARTDATE]
					,[WEEK_ENDDATE]
					,[MONTH]
					,[MONTH_DESC]
					,[YEAR]
					,DATEDIFF(d,WEEK_ENDDATE,GETDATE()) [DAYDIFF]
					FROM [KRI_PROD].[dbo].[KRI_FISCAL_CALENDAR] C
					WHERE   WEEK_ENDDATE > @CUR_WEEK_ENDDATE AND WEEK_ENDDATE <= @CUR_WEEK_ENDDATE  + 7
		            AND DATEDIFF(DAY,WEEK_ENDDATE,@CUR_DATE) BETWEEN 1 ANd 7
		            --WHERE DATEDIFF(DAY,WEEK_ENDDATE,@CUR_DATE) BETWEEN 1 ANd 7
		            AND (C.YEAR BETWEEN YEAR(GETDATE()) AND YEAR(GETDATE())+1) AND C.WEEK >= 1

			OPEN KRI_FISCAL_CAL_CURS
      
			FETCH NEXT FROM KRI_FISCAL_CAL_CURS INTO @YYYYWW ,@WEEK ,@WEEK_STARTDATE ,@WEEK_ENDDATE ,@MONTH ,
			@MONTH_DESC ,@YEAR ,@DAYDIFF 
			IF @DAYDIFF < 0 SET @DAYDIFF = @DAYDIFF * (-1)
			SET @ROW = @ROW + 1
			
			
             
             IF @KRI <> 37 OR  @KRI <> 36 
             BEGIN 
				SET @SQL2 = 'SELECT '  + @YYYYWW + ' AS CurrYYYYWW' + ',' + @SELECT_STMT + ' ' + CHAR(10)
            
				SET @SQL2 = @SQL2 + @FROM_STMT + ' ' + CHAR(10)
                       
             
				SET @SQL2 = @SQL2 + @WHERE_STMT + ' '  + CHAR(10)
             
             
				SET @SQL2 = @SQL2 + ISNULL(@GROUP_STMT ,' ')+ CHAR(10)             
             
                          
				SET @SQL2 = @SQL2 + @ORDER_STMT  
			 
			 END		 
			    
			    IF @KRI = 37  OR @KRI = 36
					BEGIN
					SET @SQL =  'SELECT * FROM OPENQUERY(' + @SOURCE_SYSTEM + ','+ ''''
					SET @SQL2 = 'SELECT '  + @YYYYWW + ' AS CurrYYYYWW' + ',' +  @SELECT_STMT + ' ' + CHAR(10)
					SET @SQL2 = @SQL2 + @FROM_STMT + ' ' + CHAR(10)
					SET @SQL2 = @SQL2 + @WHERE_STMT + ' ' + @YYYYWW + ' ' + CHAR(10)
					SET @SQL2 = @SQL2 + @ORDER_STMT + ''''+')'
					END
			 
         
        
        IF @KRI=32 OR @KRI = 33 OR @KRI = 36 OR @KRI = 37
        BEGIN  --3
       
			--PRINT (@SQL + @SQL2)  
            INSERT INTO #tmp3
		    EXECUTE(@SQL + @SQL2)  
	           
		   INSERT INTO [KRI_PROD].[dbo].[TMP_TABLE]  
		   SELECT YYYYWW  ,STOREID  ,@MEASURE,AMOUNT  FROM  #tmp3 WHERE CurrYYYYWW =  YYYYWW  
           
        END  --3     
        IF @KRI=34 OR @KRI=35
        BEGIN  --3
			--PRINT @SQL2
			--PRINT (@SQL + @SQL2)  
           INSERT INTO #tmp4
		   EXECUTE(@SQL + @SQL2)          
        END   --3
        IF @KRI=34 
			begin   --3
			INSERT INTO [KRI_PROD].[dbo].[TMP_TABLE]  		   
			SELECT YYYYWW 
			,STOREID 		   
			,CASE 
			WHEN CHARINDEX('1',AGEING)>0 THEN 'RJCT_Less_7_Days'
			WHEN CHARINDEX('2',AGEING)>0 THEN 'RJCT_14_30_Days'
			WHEN CHARINDEX('3',AGEING)>0 THEN 'RJCT_30_60_Days'
			WHEN CHARINDEX('4',AGEING)>0 THEN 'RJCT_Gr_60_Days'
			END 
			,AMOUNT
			FROM  #tmp4 WHERE CurrYYYYWW =  YYYYWW  
			end --3
		IF @KRI=35
			begin  --3
            INSERT INTO [KRI_PROD].[dbo].[TMP_TABLE]  		   
			SELECT CurrYYYYWW 
			,STOREID 
            ,CASE
            WHEN AGEING ='AP_0' THEN 'AGE_0_Days'
			WHEN AGEING='AP_08' THEN 'AGE_0_7_Days'
			WHEN AGEING='AP_30' THEN 'AGE_7_30_Days'
			WHEN AGEING='AP_60' THEN 'AGE_30_60_Days'
			WHEN AGEING='AP_90'  THEN 'AGE_60_90_Days'
			ELSE 'AGE_Gr_90_Days'
			END                 
			,AMOUNT
			FROM  #tmp4 WHERE CurrYYYYWW + 1  =  YYYYWW   
			end  --3  			
				
			WHILE @@FETCH_STATUS = 0 AND @ROW < @COUNT 
			BEGIN   --3		 
			 SET @ROW = @ROW + 1
             FETCH NEXT FROM KRI_FISCAL_CAL_CURS INTO @YYYYWW ,@WEEK ,@WEEK_STARTDATE ,
                                   @WEEK_ENDDATE ,@MONTH ,@MONTH_DESC ,@YEAR ,@DAYDIFF
             IF @DAYDIFF < 0 SET @DAYDIFF = @DAYDIFF * (-1)
             
             
             
		     
		     IF @KRI <> 37 OR  @KRI <> 36 
             BEGIN 
		  
					SET @SQL2 = 'SELECT '  + @YYYYWW + ' AS CurrYYYYWW' + ',' + @SELECT_STMT + ' ' + CHAR(10)
            
					SET @SQL2 = @SQL2 + @FROM_STMT + ' ' + CHAR(10)
                       
             
					SET @SQL2 = @SQL2 + @WHERE_STMT + ' '  + CHAR(10)
             
             
					SET @SQL2 = @SQL2 + ISNULL(@GROUP_STMT ,' ')+ CHAR(10)             
             
                          
					SET @SQL2 = @SQL2 + @ORDER_STMT            
           END
              
		   IF @KRI = 37 OR @KRI = 36
					BEGIN
					SET @SQL =  'SELECT * FROM OPENQUERY(' + @SOURCE_SYSTEM + ','+ ''''
					SET @SQL2 = 'SELECT '  + @YYYYWW + ' AS CurrYYYYWW' + ',' +  @SELECT_STMT + ' ' + CHAR(10)
					SET @SQL2 = @SQL2 + @FROM_STMT + ' ' + CHAR(10)
					SET @SQL2 = @SQL2 + @WHERE_STMT + ' ' + @YYYYWW + ' ' + CHAR(10)
					SET @SQL2 = @SQL2 + @ORDER_STMT + ''''+')'
					END
					  
		   IF @KRI=32 OR @KRI = 33 OR @KRI = 36 OR @KRI = 37
				BEGIN --4
					--PRINT (@SQL + @SQL2) 
					INSERT INTO #tmp3			 
					EXECUTE(@SQL + @SQL2)  
	           
					INSERT INTO [KRI_PROD].[dbo].[TMP_TABLE]  
					SELECT YYYYWW  ,STOREID ,@MEASURE ,AMOUNT  FROM  #tmp3 WHERE CurrYYYYWW =  YYYYWW  
				          
				END --4   	 
	      IF @KRI=34 OR @KRI=35
				BEGIN	--4
				--PRINT (@SQL + @SQL2)  
				INSERT INTO #tmp4
				EXECUTE(@SQL + @SQL2) 				
				END  -- 4
				
		  IF @KRI=34
					begin  --4
					INSERT INTO [KRI_PROD].[dbo].[TMP_TABLE]  		   
					SELECT YYYYWW 
					,STOREID 		   
					,CASE 
					WHEN CHARINDEX('1',AGEING)>0 THEN 'RJCT_Less_7_Days'
					WHEN CHARINDEX('2',AGEING)>0 THEN 'RJCT_14_30_Days'
					WHEN CHARINDEX('3',AGEING)>0 THEN 'RJCT_30_60_Days'
					WHEN CHARINDEX('4',AGEING)>0 THEN 'RJCT_Gr_60_Days'
					END 
					,AMOUNT
					FROM  #tmp4 WHERE CurrYYYYWW =  YYYYWW   
					end  --4
					
          IF @KRI=35
                    begin  --4
						INSERT INTO [KRI_PROD].[dbo].[TMP_TABLE]  		   
						SELECT CurrYYYYWW 
						,STOREID 
						,CASE
						WHEN AGEING ='AP_0' THEN 'AGE_0_Days'
						WHEN AGEING='AP_08' THEN 'AGE_0_7_Days'
						WHEN AGEING='AP_30' THEN 'AGE_7_30_Days'
						WHEN AGEING='AP_60' THEN 'AGE_30_60_Days'
						WHEN AGEING='AP_90'  THEN 'AGE_60_90_Days'
						ELSE 'AGE_Gr_90_Days'
						END                  
						,AMOUNT
						FROM  #tmp4 WHERE CurrYYYYWW + 1 =  YYYYWW 
				     end --4
      
		     END    --3	
            
             IF @@ERROR <> 0 SET @SUCCESS=99 ELSE  SET @SUCCESS=1 
        
      
          CLOSE KRI_FISCAL_CAL_CURS ;
		  DEALLOCATE KRI_FISCAL_CAL_CURS ;
		  
		  
		  
		/* Append into FACT_ALL_KRI_RECORDS  */
		IF @KRI <> 34 AND @KRI <> 35 -- 
	      
	        BEGIN  -- 3
	          /* Before adding to KRI Matrix Table delete matching records from TMP_TABLE */	      
              SET @SQL = 'DELETE  FROM  KRI_PROD.DBO.FACT_ALL_KRI_RECORDS WHERE ' + CHAR(10)
              SET @SQL = @SQL + ' MEASURE =  ' + '''' + @MEASURE + '''' + CHAR(10)
              SET @SQL = @SQL + ' AND YYYYWW IN (SELECT DISTINCT(YYYYWW) FROM   KRI_PROD.DBO.TMP_TABLE T   )' + CHAR(10)
              
                
               --PRINT @SQL
               EXECUTE(@SQL) 
            
            
            
		      -- NOW INSERT RECORD INTO @TABLE 	   
			  SET @SQL = 'INSERT INTO '+ @TABLE + CHAR(10)
		      SET @SQL = @SQL + 'SELECT C.YYYYWW ' +CHAR(10)
			  SET @SQL = @SQL + ' ,A.STOREID ' + CHAR(10)
			  SET @SQL = @SQL + ' , ' + ''''+ @MEASURE + ''''+ CHAR(10)
			  SET @SQL = @SQL + ' ,A.VALUE ' + CHAR(10)			
			  SET @SQL = @SQL + ' FROM [KRI_PROD].[dbo].[TMP_TABLE] A ' + CHAR(10)
			  SET @SQL = @SQL + '  LEFT OUTER JOIN [KRI_PROD].[dbo].[KRI_FISCAL_CALENDAR] C ' + CHAR(10)
			  SET @SQL = @SQL + '  ON C.YYYYWW = A.YYYYWW '
			  
			   --PRINT @SQL
			   EXECUTE(@SQL)
	             IF @@ERROR <> 0 SET @SUCCESS=99 ELSE  SET @SUCCESS=1 
	        END  --3
	          
	  IF @KRI = 34 -- AGEING_OF_REJECTED_TRANSFERS
	         BEGIN  --3
	            
	            SET @v_Measures = '(' + '''' +'RJCT_Less_7_Days' + '''' + ',' + CHAR(10)
	            SET @v_Measures = @v_Measures  + '''' +'RJCT_14_30_Days' +''''+ ',' + CHAR(10)
	            SET @v_Measures = @v_Measures + '''' +'RJCT_30_60_Days' +''''+ ',' + CHAR(10)	            
	            SET @v_Measures = @v_Measures  + '''' + 'RJCT_Gr_60_Days' +''''+ ')'
	         
	            /* Before adding to KRI Matrix Table delete matching records from #tmp1 */	      
                 SET @SQL = 'DELETE  FROM  KRI_PROD.DBO.FACT_ALL_KRI_RECORDS WHERE ' + CHAR(10)
                 SET @SQL = @SQL + ' MEASURE IN  ' + @v_Measures + CHAR(10)
                 SET @SQL = @SQL + ' AND YYYYWW IN (SELECT DISTINCT(YYYYWW) FROM   [KRI_PROD].[dbo].[TMP_TABLE] T   )' + CHAR(10)
                 
                 --PRINT @SQL
                 EXECUTE(@SQL) 
                 
	         /**** BUILD OF KRI MATRIX COMPLETE ***/       
	       
	          SET @SQL = 'INSERT INTO '+ @TABLE + CHAR(10)
	          SET @SQL = @SQL + 'SELECT C.YYYYWW ' +CHAR(10)
	          SET @SQL = @SQL + ',A.STOREID ' +CHAR(10)	          
	          SET @SQL = @SQL + ',A.MEASURE	'     + CHAR(10)    
	          SET @SQL = @SQL + ',A.VALUE	'     + CHAR(10)    
	          SET @SQL = @SQL + 'FROM [KRI_PROD].[dbo].[TMP_TABLE] A	 '     + CHAR(10)   
	          SET @SQL = @SQL + 'INNER JOIN [KRI_PROD].[dbo].[KRI_FISCAL_CALENDAR] C 	 '     + CHAR(10)
	        --  SET @SQL = @SQL + 'ON C.YYYYWW = A.YYYYWW  AND A.SALES_AMT <> 0 '     + CHAR(10)
	          SET @SQL = @SQL + 'ON C.YYYYWW = A.YYYYWW  '     + CHAR(10)
	       
	       
	       
	          --PRINT @SQL    
	          EXECUTE(@SQL)       
	         
	       
	       END  --3
	     
	     IF @KRI = 35 -- AGED_DEBTORS
	         BEGIN  --3
	            
	            SET @v_Measures = '(' + '''' +'AGE_0_Days' + '''' + ',' + CHAR(10)
	            SET @v_Measures = @v_Measures  + '''' +'AGE_0_7_Days' +''''+ ',' + CHAR(10)
	            SET @v_Measures = @v_Measures + '''' +'AGE_7_30_Days' +''''+ ',' + CHAR(10)
	            SET @v_Measures = @v_Measures + '''' +'AGE_30_60_Days' +''''+ ',' + CHAR(10)
	            SET @v_Measures = @v_Measures  + '''' +'AGE_60_90_Days' +''''+ ')'
	         
	            /* Before adding to KRI Matrix Table delete matching records from #tmp2 */	      
                 SET @SQL = 'DELETE  FROM  KRI_PROD.DBO.FACT_ALL_KRI_RECORDS WHERE ' + CHAR(10)
                 SET @SQL = @SQL + ' MEASURE IN  ' + @v_Measures + CHAR(10)
                 SET @SQL = @SQL + ' AND YYYYWW IN (SELECT DISTINCT(YYYYWW) FROM   [KRI_PROD].[dbo].[TMP_TABLE] T   )' + CHAR(10)
                 
                 --PRINT @SQL
                 EXECUTE(@SQL)
                 
	         /**** BUILD OF KRI MATRIX COMPLETE ***/      
	       
	          SET @SQL = 'INSERT INTO '+ @TABLE + CHAR(10)
	          SET @SQL = @SQL + 'SELECT C.YYYYWW ' +CHAR(10)
	          SET @SQL = @SQL + ',A.STOREID ' +CHAR(10)	          
	          SET @SQL = @SQL + ',A.MEASURE	'     + CHAR(10)    
	          SET @SQL = @SQL + ',A.VALUE	'     + CHAR(10)    
	          SET @SQL = @SQL + 'FROM [KRI_PROD].[dbo].[TMP_TABLE] A	 '     + CHAR(10)   
	          SET @SQL = @SQL + 'INNER JOIN [KRI_PROD].[dbo].[KRI_FISCAL_CALENDAR] C 	 '     + CHAR(10)
	        --  SET @SQL = @SQL + 'ON C.YYYYWW = A.YYYYWW  AND A.SALES_AMT <> 0 '     + CHAR(10)
	          SET @SQL = @SQL + 'ON C.YYYYWW = A.YYYYWW  '     + CHAR(10)
	       
	       
	       
	          --PRINT @SQL    
	          EXECUTE(@SQL)
	      
	       
	          
	       END  --3  
	       
         END  --2
      
      END --1
	  
  END    